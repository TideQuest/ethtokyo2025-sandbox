"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createClaimOnMechain = createClaimOnMechain;
const client_1 = require("../../client");
const client_2 = require("../../client");
/**
 * Creates a Reclaim claim on the AVS chain.
 */
async function createClaimOnMechain({ createClaimOnAttestor = client_1.createClaimOnAttestor, onStep, client, ...opts }) {
    const clientMechain = (0, client_1.getAttestorClientFromPool)(client.url);
    const timestamp = Math.floor(Date.now() / 1000);
    await clientMechain.waitForInit();
    onStep === null || onStep === void 0 ? void 0 : onStep({ type: 'taskRequested', timestamp });
    const { taskId, requiredAttestors, hosts } = await clientMechain.rpc('createTaskOnMechain', {
        timestamp: timestamp
    });
    onStep === null || onStep === void 0 ? void 0 : onStep({ type: 'taskCreated', taskId });
    const responses = [];
    for (let i = 0; i < requiredAttestors; i++) {
        onStep === null || onStep === void 0 ? void 0 : onStep({ type: 'attestorRequested', host: hosts[i] });
        const client = new client_2.AttestorClient({
            url: hosts[i]
        });
        const claimTunnelRes = await createClaimOnAttestor({
            ...opts,
            client
        });
        responses.push(claimTunnelRes);
    }
    return { taskId, responses };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlLWNsYWltLW9uLW1lY2hhaW4uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvbWVjaGFpbi9jbGllbnQvY3JlYXRlLWNsYWltLW9uLW1lY2hhaW4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFTQSxvREEwQ0M7QUFuREQsdUNBQXVHO0FBQ3ZHLHVDQUEyQztBQUszQzs7R0FFRztBQUNJLEtBQUssVUFBVSxvQkFBb0IsQ0FBeUIsRUFDbEUscUJBQXFCLEdBQUcsOEJBQXNCLEVBQzlDLE1BQU0sRUFDTixNQUFNLEVBQ04sR0FBRyxJQUFJLEVBQ3NCO0lBRzdCLE1BQU0sYUFBYSxHQUFHLElBQUEsa0NBQXlCLEVBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFBO0lBRTNELE1BQU0sU0FBUyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxHQUFHLElBQUksQ0FBQyxDQUFBO0lBRS9DLE1BQU0sYUFBYSxDQUFDLFdBQVcsRUFBRSxDQUFBO0lBRWpDLE1BQU0sYUFBTixNQUFNLHVCQUFOLE1BQU0sQ0FBRyxFQUFFLElBQUksRUFBRSxlQUFlLEVBQUUsU0FBUyxFQUFFLENBQUMsQ0FBQTtJQUU5QyxNQUFNLEVBQUUsTUFBTSxFQUFFLGlCQUFpQixFQUFFLEtBQUssRUFBRSxHQUFHLE1BQU0sYUFBYSxDQUFDLEdBQUcsQ0FBQyxxQkFBcUIsRUFBRTtRQUMzRixTQUFTLEVBQUUsU0FBUztLQUNwQixDQUFDLENBQUE7SUFFRixNQUFNLGFBQU4sTUFBTSx1QkFBTixNQUFNLENBQUcsRUFBRSxJQUFJLEVBQUUsYUFBYSxFQUFFLE1BQU0sRUFBRSxDQUFDLENBQUE7SUFFekMsTUFBTSxTQUFTLEdBQTJCLEVBQUUsQ0FBQTtJQUU1QyxLQUFJLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsaUJBQWlCLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQztRQUUzQyxNQUFNLGFBQU4sTUFBTSx1QkFBTixNQUFNLENBQUcsRUFBRSxJQUFJLEVBQUUsbUJBQW1CLEVBQUUsSUFBSSxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUE7UUFFdkQsTUFBTSxNQUFNLEdBQUcsSUFBSSx1QkFBYyxDQUFDO1lBQ2pDLEdBQUcsRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDO1NBQ2IsQ0FBQyxDQUFBO1FBRUYsTUFBTSxjQUFjLEdBQUcsTUFBTSxxQkFBcUIsQ0FBRTtZQUNuRCxHQUFHLElBQUk7WUFDUCxNQUFNO1NBQ04sQ0FBQyxDQUFBO1FBRUYsU0FBUyxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQTtJQUMvQixDQUFDO0lBRUQsT0FBTyxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsQ0FBQTtBQUU3QixDQUFDIn0=